---
# title: ""
# author: ""
format:
  revealjs:
    output-file: "index.html"
    auto-stretch: false
    margin: 0
    slide-number: true
    scrollable: true
    preview-links: auto
    logo: images/logo_portada2.png
    css: ine_quarto_styles.css
    mermaid-format: svg
    view-distance: 50
    # footer: https://quarto.org
code-annotations: below
---

# 

```{=html}
<!---
# TODO: this does not work
.linea-superior[]
.linea-inferior[] 
--->
```
```{=html}
<!---
# TODO: this does not work
![](images/logo_portada2.png){.center style="width: 20%;"}   
--->
```

```{=html}
<!---
<img src="images/logo_portada2.png" style="width: 20%"/>  
--->
```
<img src="images/logo_portada2.png" width="20%"/>

[**Capacitación en R y herramientas de productividad**]{.big-par .center-justified}

[**Nivel Intermedio**]{.big-par .center-justified}

[**Diciembre 2024**]{.big-par .center-justified}

## Contenidos
::: {.incremental .small-par}
- Quarto vs R Markdown
- Documentos Quarto
- Documentos Quarto en RStudio
- Markdown Quarto básico
- Figuras, Tablas y Diagramas
- Bloques de código: R
- Embeds
- Dashboards
:::



## Quarto vs R Markdown

::: {.incremental .small-par}
- Quarto es una herramienta de código abierto que usa una variación específica de markdown ([Pandoc](https://pandoc.org)) para la publicación de documentos.
- El objetivo de Quarto es mejorar dramáticamente el proceso de creación y colaboración en documentos científicos y técnicos.
  - Para ello, Quarto combina en un único sistema consistente la funcionalidad de R Markdown, bookdown, distill, xaringian, etc.
- Por otra parte, R Markdown está fundamentalmente atado a R. En cambio, Quarto no requiere R y fue desarrollado para ser multi-lenguaje, comenzando con R, Python, Javascript y Julia, con la idea de que funcionara incluso con lenguajes que aún no existen.
- Aún así, Quarto es altamente compatible con R Markdown, lo que permite que podamos renderizar la mayoría de documentos escritos usando R Markdown. 
:::



## Documentos Quarto

::: {.incremental .small-par}
- Quarto soporta una gran cantidad de formatos de salida.
- En esta clase examinaremos sólo algunos de los más comunes:
  - HTML: lenguaje de marcado de hipertexto usado para estructurar y presentar contenido en la web.
  - PDF: formato para crear documentos paginados listos para imprimir. 
  - Revealjs: basado en HTML, es el más completo de los formatos soportado por Quarto para crear presentaciones.
- La lista completa de formatos compatibles con quarto puede consultarse [aquí](https://quarto.org/docs/output-formats/all-formats.html).
- Cada documento es renderizado de acuerdo al formato especificado en código YAML (entre ```---```) en su encabezado o desde la línea de comando (terminal).
  - Por ejemplo para un documento en formato HTML:
:::

. . .

::: {.small-par}
<div class=custom-code-1>
``` yaml
---
title: "My Document"
format: 
  html:
    output-file: "document_html.html"
---
```
</div>
:::

[]{.small-par}

::: {.small-par}
<div class=custom-code-1>
``` {.bash filename="terminal"}
quarto render document_html.qmd -t html -o document_html.html
```
</div>
:::



## Documentos Quarto

::: {.incremental .small-par}
- Veamos un ejemplo de cómo luce un documento cuando es renderizado en cada uno de estos formato de Quarto. 
:::

. . .

::: {.panel-tabset .small-par}

### HTML

::: {.center}
![](images/example_document_html.png){width="60%"}
:::

### PDF

::: {.center}
![](images/example_document_pdf.png){width="90%"}
:::

### Revealjs

::: {.r-stack fragment-index=0 .center}

![](images/example_document_revealjs_01.png){.fragment .fade-in-then-out width="90%"}

![](images/example_document_revealjs_02.png){.fragment .fade-in-then-out width="90%"}

![](images/example_document_revealjs_03.png){.fragment .fade-in-then-out width="90%"}

:::

:::



## Documentos Quarto

::: {.incremental .small-par}
- Para lograr el resultado anterior, veamos ahora cómo diseñar documentos con los mismos formatos.
  - Aquí sólo nos concentraremos en el formato general de cada documento y más adelante aprenderemos cómo generar sus distintos componentes: código, plots, etc.
  - Además, sólo se muestra una parte de cada documento, pero su versión completa se encuentra en el archivo indicado en el código YAML de cada documento, disponible en el repo de la clase.
:::

. . .

::: {.panel-tabset .small-par}

### HTML

<div class=custom-code-2>
```` r

---
title: "Documento HTML" # <1>
subtitle: "Ejemplo de documento generado en Quarto"
date: today
author: "Capacitación R Intermedio"  # <1>
format:  # <2>
  html:
    output-file: "document_html.html" # <2>
    toc: true # <3>
    toc-depth: 2
    toc-title: Contenido
    number-sections: true  # <3>
    html-math-method: katex # <4>
    # code-line-numbers: true
    # css: styles.css # <4>
---


# Capítulo 1

## Sección 1

```{{r}}
#| echo: true
#| eval: true
#| warning: false
#| code-fold: true

library(tidyverse)
library(ggplot2)

airquality <- airquality %>% 
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

ggplot(airquality, aes(temp_celsius, Ozone)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

````
1. Definiciones generales, comunes en múltiples formatos.
2. Se especifica el formato de salida y opcionalmente el nombre del documento que será creado.
3. Algunas opciones comunes para varios formatos: <span style="color:#4758ab;">toc</span> permite agregar una tabla de contenidos (toc) generada automáticamente, con título <span style="color:#4758ab;">toc-title</span>. 
Además <span style="color:#4758ab;">toc-depth</span> determina el número de niveles de secciones que serán mostrados en la toc.
4. Algunas opciones específicas del formato: <span style="color:#4758ab;">html-math-method</span> define el método usado para renderizar ecuaciones LaTeX. <span style="color:#4758ab;">code-line-numbers</span> permite incluir número de línea en bloques de código. 
Modificaciones en la apariencia del documento pueden agregarse con estilos **CSS** personalizados en un documento <span style="color:#4758ab;">css</span>.
</div>


### PDF

<div class=custom-code-2>
```` r

---
title: "Documento PDF"
subtitle: "Ejemplo de documento generado en Quarto"
date: today
author: "Capacitación R Intermedio"
format:
  pdf: # <1>
    output-file: "document_pdf.pdf"
    toc: true
    toc-depth: 3
    toc-title: Contenido
    number-sections: true
    # lof: true # <2>
    # lot: true # <2>
    documentclass: scrartcl # <3>
    papersize: letter # <4>
    geometry:
      - top=30mm
      - left=20mm # <4>
---


# Capítulo 1

## Sección 1

```{{r}}
#| echo: true
#| eval: true
#| warning: false

library(tidyverse)
library(ggplot2)

airquality <- airquality %>% 
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

ggplot(airquality, aes(temp_celsius, Ozone)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

````
1. Algunas opciones específicas del formato: 
2.  <span style="color:#4758ab;">lof</span> y <span style="color:#4758ab;">lot</span> imprimen la lista de figuras y tablas en el documento. 
3.  <span style="color:#4758ab;">documentclass</span> define la clase del documento: las estándar <span style="color:#4758ab;">article</span>,  <span style="color:#4758ab;">report</span>, <span style="color:#4758ab;">book</span> o sus equivalentes KOMA Script <span style="color:#4758ab;">scrartcl</span>, <span style="color:#4758ab;">scrreprt</span>, <span style="color:#4758ab;">scrbook</span>.
4.  <span style="color:#4758ab;">papersize</span> y  <span style="color:#4758ab;">geometry</span> definen el tamaño del documento impreso y los márgenes del mismo.
</div>


### Revealjs

<div class=custom-code-2>
```` r

---
title: "Documento Revealjs"
subtitle: "Ejemplo de documento generado en Quarto"
date: today
author: "Capacitación R Intermedio"
format:
  revealjs: # <1>
    output-file: "document_revealjs.html"  
    margin: 0 # <2>
    slide-number: false # <3>
    scrollable: true # <3>
    logo: images/logo_portada2.png # <4>
    # footer: "ejemplo de footer" # <4>
    css: document_revealjs_styles.css # <5>
---


## Capítulo 1 | Sección 1

```{{r}}
#| echo: true
#| eval: true
#| warning: false
#| code-fold: true

library(tidyverse)
library(ggplot2)

airquality <- airquality %>% 
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

ggplot(airquality, aes(temp_celsius, Ozone)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

````
1. Algunas opciones específicas del formato: 
2. <span style="color:#4758ab;">margin</span> fija el factor del tamaño de visualización que debe permanecer vacío alrededor del contenido (por defecto 0.1).
[Otros parámetros](https://quarto.org/docs/presentations/revealjs/advanced.html) que controlan el tamaño y margen de las láminas son: <span style="color:#4758ab;">width</span>, <span style="color:#4758ab;">height</span>, <span style="color:#4758ab;">min-scale</span>, <span style="color:#4758ab;">max-scale</span>. 
3. <span style="color:#4758ab;">slide-number</span> permite incluir o no los números de las láminas y <span style="color:#4758ab;">scrollable</span> permite hacer *scrolling* para mostrar contenido que queda fuera de los márgenes normales de una lámina. 
4. <span style="color:#4758ab;">logo</span> y <span style="color:#4758ab;">footer</span> permiten incluir una imagen y un pie de página al pie de cada lámina.
5. <span style="color:#4758ab;">css</span> permite incluir un archivo con estilos **CSS** personalizados, que pueden mejorar la visualización.
Por ejemplo el archivo document_revealjs_styles.css contiene tres clases **CSS** usadas para: <br> 
  **.reveal .code**: ajustar el tamaño de bloques de código. <br>
  **.reveal .slide-logo**: ajustar el tamaño del logo. <br>
  **.reveal h2**: personalizar un header de nivel 2 que incluya un banner institucional.
</div>

:::



## Documentos Quarto en RStudio

::: {.incremental .small-par}
- RStudio desde su versión v2022.07 incluye soporte para crear, editar y visualizar documentos Quarto.
:::

. . .

::: {.panel-tabset .small-par}

### Crear documentos

::: {.small-par}
* Usando el comando **File : New File : Quarto Document…** podemos crear un nuevo documento Quarto.
:::

::: {.center}
![](images/rstudio_create_document.png){width="60%"}
:::

### Renderizar y previsualizar

::: {.incremental .small-par}
::: {.small-par}
* Cliqueando el botón **Render** de la barra de herramientas, podemos renderizar el documento y previsualizar el output. <br>
  []{.small-par}
  ![](images/rstudio_render.png){width="60%"}
:::
::: {.small-par}
* También es posible renderizar el documento y actualizar la previsualización cada vez que guardemos el documento. <br>
Esto se consigue activando la casilla **Render on Save**.
  []{.small-par}
  ![](images/rstudio_render_on_save.png){width="60%"}
:::
::: {.small-par}
* Alternativamente, un documento también puede ser renderizado directamente usando el paquete quarto en una consola R. <br>
  []{.small-par}
  ![](images/rstudio_render_terminal.png){width="60%"}
<!-- ``` r
install.packages("quarto")
quarto::quarto_render("hello.qmd")
``` -->
:::
:::

### Modos: visual y source

::: {.incremental .small-par}
* En RStudio podemos ser el mismo documento en dos modos: **visual** y **source**.
  * En el modo **visual** podemos usar la barra de herramientas para agregar o editar texto en markdown, tablas, figuras, etc.
  * En el modo **source** nos permite editar directamente el código fuente que genera cada componente en un documento Quarto.
  []{.small-par}
  ![](images/rstudio_source_and_visual.png){width="100%"}
:::

:::



## Ejercicio 1

::: {.small-par}
1) Usando RStudio, cree un nuevo documento Quarto llamado <span style="color:#4758ab;"> ejercicio_documento_html.qmd</span>, que tenga formato HTML.
2) Active la casilla **Render on Save** en RStudio, para que cuda vez que guarde el documento éste sea renderizado y se actualice su previsualización.
3) Copie el contenido del archivo <span style="color:#4758ab;"> document_html.qmd</span>, excepto por la **Sección 3**, en el nuevo archivo creado.
Visualice que el nuevo contenido aparezca en el documento de Quarto.
4) Cree un archivo llamado <span style="color:#4758ab;"> ejercicio_documento_html.css</span>, en el cual agregaremos algunos estilos CSS para modificar la apariencia de algunos elementos del documento:
   - Agregue una clase <span style="color:#4758ab;"> .custom-code-1 </span> y use esta clase para cambiar la apariencia del bloque de código que aparece en la **Sección 2**.
   ``` markdown
   .custom-code-1{
     font-size: 1.8rem
   }
   ```
   - Agregue una segunda clase <span style="color:#4758ab;"> .custom-text-1 </span> y úsela para cambiar la apariencia de la tabla que aparece en la **Sección 2**.
   ``` markdown
   .custom-text-1{
     font-size: 1.8rem
   }
   ```      
   - Para aplicar una clase a un elemento del documento, debemos encerrarlo entre elementos html <span style="color:#4758ab;"> div </span>, por ejemplo para un bloque de código:
   ```` markdown
   <div class=custom-code-1>
   ```{{r}}
   library(ggplot2)
   ```
   </div>
   ````
:::



## Markdown Quarto básico

::: {.incremental .small-par}
- Markdown es un formato de texto plano, diseñado para ser fácil de escribir y leer:
- Veamos algunos ejemplos de las sintaxis markdown más comunes usadas en Quarto. 
:::

. . .

::: {.panel-tabset .small-par}

### Formato de texto

::: {.small-par}

+-----------------------------------------+-----------------------------------------+
| Sintaxis Markdown                       | Output                                  |
+=========================================+=========================================+
| ``` markdown                            | *italics*, **bold**, ***bold italics*** |
| *italics*, **bold**, ***bold italics*** |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | superscript^2^ / subscript~2~           |
| superscript^2^ / subscript~2~           |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | ~~strikethrough~~                       |
| ~~strikethrough~~                       |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | `verbatim code`                         |
| `verbatim code`                         |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+

:::

### Headings {#headings}

::: {.small-par}

+-------------------+-----------------------------------+
| Sintaxis Markdown | Output                            |
+===================+===================================+
| ``` markdown      | # Header 1 {.heading-output}      |
| # Header 1        |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ## Header 2 {.heading-output}     |
| ## Header 2       |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ### Header 3 {.heading-output}    |
| ### Header 3      |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | #### Header 4 {.heading-output}   |
| #### Header 4     |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ##### Header 5 {.heading-output}  |
| ##### Header 5    |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ###### Header 6 {.heading-output} |
| ###### Header 6   |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+

<!-- ```{=html}
<style type="text/css">
.heading-output {
  border-bottom: none;
  margin-top: 0;
  margin-bottom: 0;
}
</style>
``` -->
:::


### Listas

::: {.small-par}

+------------------------------------------------+------------------------------------------------------------------------------------+
| Sintaxis Markdown                              | Output                                                                             |
+================================================+====================================================================================+
| ``` markdown                                   | ::: {.small-par}                                                                   |
| * lista no numerada                            | * lista no numerada                                                                |
|     + sub-item 1                               |   + sub-item 1                                                                     |
|     + sub-item 2                               |   + sub-item 2                                                                     |
|         - sub-sub-item 1                       |     - sub-sub-item 1                                                               |
| ```                                            | :::                                                                                |
+------------------------------------------------+------------------------------------------------------------------------------------+
| ``` markdown                                   |                                                                                    |
| *   item 2                                     | -   <span style="font-size:16.0pt">item 2</span>                                   |
|                                                |                                                                                    |
|     Continuación (indentación de 4 espacios)   |     <span style="font-size:16.0pt">Continuación (indentación de 4 espacios)</span> |
| ```                                            |                                                                                    |
+------------------------------------------------+------------------------------------------------------------------------------------+
| ``` markdown                                   |                                                                                    |
| 1. lista numerada                              |  1. lista numerada                                                                 |
| 2. item 2                                      |  2. item 2                                                                         |
|     i) sub-item 1                              |      i) sub-item 1                                                                 |
|          A.  sub-sub-item 1                    |           A.  sub-sub-item 1                                                       |
| ```                                            |                                                                                    |
+------------------------------------------------+------------------------------------------------------------------------------------+
| ``` markdown                                   |                                                                                    |
| - [ ] Tarea 1                                  | - [ ] Tarea 1                                                                      |
| - [x] Tarea 2                                  | - [x] Tarea 2                                                                      |
| ```                                            |                                                                                    |
+------------------------------------------------+------------------------------------------------------------------------------------+
| ``` markdown                                   |                                                                                    |
| (@)  Lista cuya numeración                     |  (1) Lista cuya numeración                                                         |
|                                                |                                                                                    |
| continúa después                               |  <span style="font-size:16.0pt">continúa después</span>                            |
|                                                |                                                                                    |
| (@)  de una interrupción                       |  (2) de una interrupción                                                           |
| ```                                            |                                                                                    |
+------------------------------------------------+------------------------------------------------------------------------------------+
| ``` markdown                                   |                                                                                    |
| ::: {}                                         | ::: {}                                                                             |
| 1. Lista                                       | 1. Lista                                                                           |
| :::                                            | :::                                                                                |
|                                                |                                                                                    |
| ::: {}                                         | ::: {}                                                                             |
| 1. Seguida de otra lista                       | 1. Seguida de otra lista                                                           |
| :::                                            | :::                                                                                |
| ```                                            |                                                                                    |
+------------------------------------------------+------------------------------------------------------------------------------------+
| ``` markdown                                   |                                                                                    |
| término                                        | término                                                                            |
| : definición                                   | : definición                                                                       |
| ```                                            |                                                                                    |
+------------------------------------------------+------------------------------------------------------------------------------------+

:::


### Contenido raw

::: {.small-par}
- Contenido raw puede ser incluido directamente sin parseo de Quarto usando el [atributo raw de Pandoc](https://pandoc.org/MANUAL.html#extension-raw_attribute).
Un bloque raw comienza con <span style="color:#4758ab;">```` ```{=formato} ```` </span>. 
Por ejemplo, aquí vemos un bloque raw HTML: 
:::

```` markdown
```{=html}
<p align="center"><iframe src="https://quarto.org/" width="500" height="400"></iframe></p>
```
````

```{=html}
<p align="center"><iframe src="https://quarto.org/" width="500" height="400"></iframe></p>
```


### Ecuaciones

::: {.small-par}
- Ecuaciones matemáticas pueden incluirse en modo <span style="color:#4758ab;">inline</span> usando el delimitador <span style="color:#4758ab;"> $ </span> o en modo <span style="color:#4758ab;"> display </span> con el delimitador <span style="color:#4758ab;"> $$ </span>. Por ejemplo
:::

+-------------------------------+---------------------------------------------------------------+
| Sintaxis Markdown             | Output                                                        |
+===============================+===============================================================+
| ``` markdown                  |                                                               |
| método `inline`: $E = mc^{2}$ | método <span style="color:#4758ab;">inline</span>: $E=mc^{2}$ |
| ```                           |                                                               |
+-------------------------------+---------------------------------------------------------------+
| ``` markdown                  |                                                               |
| método `display`:             | método  <span style="color:#4758ab;">display</span>:          |
|                               |   $$E = mc^{2}$$                                              |
| $$E = mc^{2}$$                |                                                               |
| ```                           |                                                               |
+-------------------------------+---------------------------------------------------------------+


:::


## Figuras, Tablas y Diagramas

::: {.incremental .small-par}
- Quarto además permite incluir de forma sencilla y flexible imágenes, links, tablas y diagramas. Veamos algunos ejemplos.
:::

. . .

::: {.panel-tabset .small-par}

### Links e Imágenes

::: {.small-par}

+------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+
| Sintaxis Markdown                                                            | Output                                                                                        |
+==============================================================================+===============================================================================================+
| ``` markdown                                                                 | <https://quarto.org>                                                                          |
| <https://quarto.org>                                                         |                                                                                               |
| ```                                                                          |                                                                                               |
+------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+
| ``` markdown                                                                 | [Quarto](https://quarto.org)                                                                  |
| [Quarto](https://quarto.org)                                                 |                                                                                               |
| ```                                                                          |                                                                                               |
+------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+
| ``` markdown                                                                 | ![Elefante](images/elephant.png){.lightbox}                                                   |
| ![Elefante](elephant.png){.lightbox}                                         |                                                                                               |
| ```                                                                          |                                                                                               |
+------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+
| ``` markdown                                                                 | [![Elefante](images/elephant.png "Un elefante"){fig-alt="Un elefante."}](https://quarto.org)  |
| [![Elefante](elephant.png "Un elefante")](https://quarto.org)                |                                                                                               |
| ```                                                                          |                                                                                               |
+------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+
| ``` markdown                                                                 | [![](images/elephant.png){fig-alt="Un elefante."}](https://quarto.org)                        |
| [![](elephant.png){fig-alt="Texto si imagen no carga"}](https://quarto.org)  |                                                                                               |
| ```                                                                          |                                                                                               |
+------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------+

:::

### Tablas

::: {.small-par}

#### Sintaxis Markdown

``` markdown
| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |
```

#### Output

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

:::


### Diagramas

::: {.small-par}
- Quarto tiene soporte nativo para renderizar diagramas [Mermaid](https://mermaid-js.github.io/mermaid/#/) y [Graphviz](https://graphviz.org/).
Esto nos permite incluir diagramas de flujo, de secuencia, de estado, cartas Gantt, etc. en nuestros documentos.
Por ejemplo, veamos el código para construir un diagrama Mermaid simple y cómo se ve después de renderizar.
:::

```{mermaid}
%%| mermaid-format: js
flowchart LR
  A[Borde rectangular] --> B(Borde redondeado)
  B --> C{Decisión}
  C --> D[Resultado uno]
  C --> E[Resultado dos]
```

::: {.center}
![](images/diagram_mermaid.png){width="60%"}
:::

:::



## Bloques de código: R

::: {.incremental .small-par}
- Quarto permite renderizar bloques de código de varios lenguajes (por ejemplo R, Python, Julia).
- En particular, para renderizar y ejecutar código R, Quarto usa [Knitr](https://yihui.org/knitr/), al igual que R Markdown.
- Bloques de código serán ejecutados al renderizar si comienzan con <span style="color:#4758ab;">```` ```{r} ```` </span> y terminan con <span style="color:#4758ab;">```` ``` ```` </span>.
- El comportamiento del bloque de código puede ser configurado usando comentarios especiales al comienzo del bloque, identificados por <span style="color:#4758ab;">```` #| ```` </span>. Por ejemplo:
  - <span style="color:#4758ab;"> echo: TRUE </span> permite mostrar el código en renderizar, mientras que no se muestra con <span style="color:#4758ab;"> echo: FALSE </span>.
  - <span style="color:#4758ab;"> eval: TRUE </span> hace que el código se evalúe al renderizar, mientras que no se evalúa con <span style="color:#4758ab;"> eval: FALSE </span>.
  - <span style="color:#4758ab;"> warning: false </span> omite warnings encontrados al evaluar el bloque de código.
- Ésta es una diferencia importante con R Markdown, donde el comportamiento del código es definido en la primera línea, por ejemplo usando <span style="color:#4758ab;"> ```{r, echo = false}. </span>
  - Quarto en cambio usa la sintaxis basada en <span style="color:#4758ab;">```` #| ```` </span> para acomodar mejor opciones más largas como <span style="color:#4758ab;"> fig-cap </span>, <span style="color:#4758ab;"> fig-subcap </span> o <span style="color:#4758ab;"> fig-alt </span> y crear documentos de forma más portables y consistente. 
:::

. . .

::: {.small-par}
<div class=custom-code-1>
```` markdown
```{{r}}
#| fig-cap: "Temperatura y nivel de ozono."
#| echo: true
#| eval: true
#| warning: false

library(tidyverse)
library(ggplot2)

print(dim(airquality))

airquality <- airquality %>% 
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

print(names(airquality))

ggplot(airquality, aes(temp_celsius, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")

```
````
</div>
:::

. . .

::: {.small-par}

<!-- @fig-airquality further explores the impact of temperature on ozone level. -->

```{r}
#| fig-cap: "Temperatura y nivel de ozono."
#| echo: false
#| eval: true
#| warning: false

library(tidyverse)
library(ggplot2)

print(dim(airquality))   # <1>

airquality <- airquality %>% 
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

print(names(airquality))   # <2>

ggplot(airquality, aes(temp_celsius, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")

# ggplot(airquality, aes(wind_kmhr, Ozone)) + 
#   geom_point() + 
#   geom_smooth(method = "loess")

```
:::



## Bloques de código: R

::: {.incremental .small-par}
- Un bloque de código también puede incluir **anotaciones interactivas**, que permiten agregar explicaciones a líneas de código.
- Para agregar una anotación:
  - Cada línea anotada debe terminar con un comentario seguido de un espacio y luego un número de anotación encerrado entre <> (por ejemplo # <2>). El número de anotación puede repetirse si la anotación se extiende en múltiples líneas.
  - Una lista numerada debe aparecer inmediatamente después del bloque de código que incluye el contenido de cada anotación. Cada número en la lista corresponde a la(s) línea(s) de código que tiene el mismo número de anotación.
:::

. . .

::: {.small-par}
<div class=custom-code-1>
```` markdown
```{{r}}
#| fig-cap: "Temperatura y nivel de ozono."
#| echo: true
#| eval: false
#| warning: false

library(tidyverse) # <1>
library(ggplot2)

print(dim(airquality))

airquality <- airquality %>%  # <2>
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

print(names(airquality))  # <3>

ggplot(airquality, aes(temp_celsius, Ozone)) +   # <4>
  geom_point() + 
  geom_smooth(method = "loess")  # <4>

```
1. Importar paquetes necesarios.
2. Convertir variables a unidades de medidas conocidas.
3. Explorar nombres de columnas en dataset.
4. Generar plot de Ozono versus Temperatura (celsius).
````
</div>
:::



## Bloques de código: R

::: {.small-par}
- En el estilo HTML por defecto las anotaciones se despliegan en una lista debajo del bloque de código, pero este comportamiento es modificable. 
  - Haciendo click en el número de anotación en la lista se destacan las líneas relevantes del código. 
:::

::: {.small-par}

<!-- @fig-airquality further explores the impact of temperature on ozone level. -->

<div class=custom-code-1>
```{r}
#| warning: false
#| fig-cap: "Temperatura y nivel de ozono."
#| echo: TRUE
#| eval: FALSE

library(tidyverse) # <1>
library(ggplot2)

print(dim(airquality))

airquality <- airquality %>%  # <2>
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )

print(names(airquality))  # <3>

ggplot(airquality, aes(temp_celsius, Ozone)) +   # <4>
  geom_point() + 
  geom_smooth(method = "loess")  # <4>

```
1. Importar paquetes necesarios.
2. Convertir variables a unidades de medidas conocidas.
3. Explorar nombres de columnas en dataset.
4. Generar plot de Ozono versus Temperatura (celsius).
</div>
:::



## Embeds

::: {.incremental .small-par}
- Podemos incluir el output de otro documento Quarto (<span style="color:#4758ab;">.qmd</span> or <span style="color:#4758ab;">.ipynb</span>) en nuestro documento, usando el comando <span style="color:#4758ab;">embed</span>.
- Para embeber el output de un bloque de código (o una celda de notebook), usamos la ruta al documento y la etiqueta del bloque en el documento.
- Por ejemplo, el documento  <span style="color:#4758ab;">airquality.qmd</span> tiene un bloque de código con etiqueta <span style="color:#4758ab;">fig-ozono-viento</span> y podemos embeber el output de ese bloque usando:
:::

. . .

::: {.big-par}
```{.markdown shortcodes=false}
{{< embed example_embed/airquality.qmd#fig-ozono-temp >}}
```
:::

{{< embed example_embed/airquality.qmd#fig-ozono-temp >}}



## Ejercicio 2

::: {.small-par}
1) Usando RStudio, cree un nuevo documento Quarto llamado <span style="color:#4758ab;"> ejercicio_code_embed.qmd</span>, que tenga formato HTML.
2) Active la casilla **Render on Save** en RStudio, para que cuda vez que guarde el documento éste sea renderizado y se actualice su previsualización.
3) Copie el contenido del archivo <span style="color:#4758ab;"> ejercicio_documento_html.qmd </span> en el nuevo archivo creado.
Visualice que el nuevo contenido aparezca en el documento de Quarto.
4) Cree un archivo llamado <span style="color:#4758ab;"> code_embed.qmd</span>, que contenga un bloque de código que haga uso del dataset <span style="color:#4758ab;"> airquality </span> para generar un gráfico de Temperatura [°C] versus Viento [km/hr], teniendo en cuenta lo siguiente:
   - Al renderizar el documento, el código debe mostrarse y evaluarse, además cualquier posible *warning* debe omitirse.
   - El gráfico generado debe tener el caption "Gráfico de Temperatura versus Viento".
5) Agregue un nuevo **Capítulo** al documento <span style="color:#4758ab;"> ejercicio_code_embed.qmd</span>, con una **Sección** que contenga el código y gráfico generados por el archivo <span style="color:#4758ab;"> code_embed.qmd</span>.
:::



## Dashboards

::: {.incremental .small-par}
- Quarto permite crear dashboards interactivos usando R, Python, Julia y Observable. 
- Es posible usar una variedad de componentes, incluyendo [Plotly](https://plotly.com/python/), [Leaflet](https://ipyleaflet.readthedocs.io/en/latest/), Jupyter Widgets, [htmlwidgets](https://www.htmlwidgets.org/); gráficos estáticos (Matplotlib, Seaborn, ggplot2, etc.); datos tabulares; anotaciones de texto, etc.
- Usando Layouts es posible organizar la información en filas y columnas de manera fácil y flexible.
  - Los componentes son redimensionados de forma inteligente para adaptar la visualización al navegador en dispositivos móviles.
- Los dashboards pueden crearse usando cualquier editor de notebook usando Jupyter notebooks (<span style="color:#4758ab;">.ipynb</span>) o documentos markdown (<span style="color:#4758ab;">.qmd</span>).
- Y pueden ser desplegados como páginas web estáticas (sin requerir un servidor) o integrando un backend [Shiny Server](/docs/dashboards/interactivity/shiny-python/index.qmd) para aumentar la interactividad.
:::



## Dashboards

::: {.r-stack fragment-index=0 .center}

![](images/dashboard_example_page_01.png){.fragment .fade-in-then-out width="100%"}

![](images/dashboard_example_page_02.png){.fragment .fade-in-then-out width="100%"}

:::



## Dashboards

::: {.small-par}
* Un dashboard consiste de varios componentes:
1)  **Barra de Navegación**: Icono, título y autor junto con links a páginas (si se define más de una página). <br>
  []{.small-par}
  ![](images/dashboard_example_components_pres_01.png){width="60%"}
:::



## Dashboards

::: {.small-par}
- Un dashboard consiste de varios componentes:
2)  **Páginas, Filas, Columnas, Tabsets**: Páginas, filas y columnas se definen usando headings de markdown (con atributos opcionales que controlan la altura, el ancho, etc). Tabsets permiten divisiones adicionales dentro de una fila o columna. <br>
  []{.small-par}
  ![](images/dashboard_example_components_pres_02.png){width="100%"}
:::



## Dashboards

::: {.small-par}
- Un dashboard consiste de varios componentes:
2)  **Páginas, Filas, Columnas, Tabsets**: Páginas, filas y columnas se definen usando headings de markdown (con atributos opcionales que controlan la altura, el ancho, etc). Tabsets permiten divisiones adicionales dentro de una fila o columna. <br>
  []{.small-par}
  ![](images/dashboard_example_components_pres_03.png){width="100%"}
:::



## Dashboards

::: {.small-par}
- Un dashboard consiste de varios componentes:
3)  **Cards, Sidebars, and Toolbars**: Cards pueden contener plots, visualizaciones de datos y contenido de forma libre. Sidebars y toolbars se usan para presentar inputs en dashboards interactivos.
  []{.small-par}
  ![](images/dashboard_example_components_pres_04.png){width="120%"}
:::



## Dashboards

::: {.small-par}
<div class=custom-code-2>
```` r
---
title: "Ejemplo de Dashboard" # <1>
author: "Capacitación R Intermedio" # <1>
format:  # <1>
  dashboard: # <1>
    logo: images/logo_portada2.png # <1>
    orientation: rows # <2>
--- 

# Page 1 {orientation="rows" scrolling="false"} # <3>

```{{r}}
library(tidyverse)
library(ggplot2)

airquality <- airquality %>% 
  mutate(
    wind_kmhr = Wind / 0.6213711922,
    temp_celsius = (Temp - 32)*5/9
  )
```

## Row {height=5%} # <4>

::: {.card}  # <5>
Análisis de Calidad de Aire en la ciudad de Nueva York. Mayo a Septiembre, 1973.
Referencia: <https://www.rdocumentation.org/packages/datasets/versions/3.6.2/topics/airquality>.
:::  # <5>

## Row {height=35%}

```{{r}}  # <6>
library(DT)
DT::datatable(airquality)
```  # <6>

## Row {height=60% .tabset}  # <7>

```{{r}}
#| title: Ozono versus Temperatura [°C]
ggplot(airquality, aes(temp_celsius, Ozone)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

```{{r}} 
#| title: Ozono versus Viento [km/hr]
ggplot(airquality, aes(wind_kmhr, Ozone)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

```{{r}} 
#| title: Temperatura [°C] versus Viento [km/hr]
ggplot(airquality, aes(wind_kmhr, temp_celsius)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

# Page 2 {orientation="rows" scrolling="true"}

## Row {height=10%}

::: {.card}
Gapminder identifies systematic misconceptions about important global trends and proportions and uses reliable data to develop easy to understand teaching materials to rid people of their misconceptions.
Gapminder is an independent Swedish foundation with no political, religious, or economic affiliations.
Learn more about the Gampminder dataset at <https://www.gapminder.org/data/>.
:::

## Row {height=90%}  # <8>

```{{r}} 
library(gapminder)
library(DT)
DT::datatable(gapminder)
```

```{{r}}
#| fig-width: 10
#| fig-height: 8
paises <- c("Peru", "Bolivia", "Chile")
# etiquetas <- data.frame(nombre_paises = paises, x = c(1975, 1965, 1962), y = c(6, 7, 4))
gapminder %>% 
  filter(country %in% paises) %>% 
  ggplot() +
  aes(x = year, y = lifeExp, color = country) +
  geom_line()
```

````
1.  La barra de navegación se pobla con el título (<span style="color:#4758ab;">title</span>) y el autor (<span style="color:#4758ab;">author</span>), tal como en otros formatos de documentos (html, pdf, etc). También puede incluirse un <span style="color:#4758ab;">logo</span>.
2.  Por defecto, las páginas de un dashboard se ordenan primero por filas y luego por columns. Pero esto puede invertirse específicando la opción <span style="color:#4758ab;">orientation: columns</span>.
3.  Páginas son creadas usando headings de nivel 1 antes de definir Filas y Columnas. El texto del heading se usará para vincular la página a la barra de navegación.
4.  Las Filas y Columnas se definen usando headings de nivel 2. En esta página definimos tres filas y especificamos su tamaño relativo usando la opción <span style="color:#4758ab;">height</span>.
5.  Las Tarjetas (Cards) pueden tener contenido markdown arbitrario usando la opción <span style="color:#4758ab;">.card</span>.
6.  Los Bloques de Código también se presentan como Tarjetas que viven dentro de las Filas y Columnas. Las tarjetas tienen un título opcional, que se especifica usando la opción <span style="color:#4758ab;">title</span>.
7.  La tercera fila de la primera página incluye <span style="color:#4758ab;">tabsets</span>, que permiten tener múltiples vistas de contenido.
8.  La segunda fila de la segunda página incluye dos bloques de código, que son automáticamente separados en dos tarjetas adyacentes.
</div>
:::



## Ejercicio 3

::: {.small-par}
1)  Trabajaremos en una copia del mismo dashboard que hemos visto en las láminas anteriores y usaremos el dataset <span style="color:#4758ab;"> gapminder</span>.
    - Cree una copia del archivo <span style="color:#4758ab;"> dashboard_example.qmd</span> y llámela <span style="color:#4758ab;"> ejercicio_dashboard.qmd</span>.
2)  Agregue al dashboard una tercera página llamada **Ejercicio**, que tenga dos columnas.
    - Recuerda especificar la orientación adecuada en la página.
3)  En la primera columna (izquierda), muestre una tabla que contenga la expectativa de vida (columna **lifeExp**) y el GDP per cápita (columna **gdpPercap**) sólo de Chile, Argentina y Brasil, en todo el rango de tiempo disponible.
4)  En la segunda columna (derecha), cree dos tabsets.
    - El primer tabset debería mostrar un gráfico de **expectativa de vida versus tiempo**, para los tres países.
    - El segundo tabset debería mostrar un gráfico de la **evolución en el tiempo del GDP per cápita** en cada país. 
:::